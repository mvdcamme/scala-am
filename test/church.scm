;; Example taken from https://github.com/jensnicolay/abstractmemo
(letrec ((plus (lambda (n11 n12)
                 (lambda (f1) (lambda (x6) ((n11 f1) ((n12 f1) x6))))))
         (mult (lambda (n21 n22)
                 (lambda (f2) (n22 (n21 f2)))))
         (pred (lambda (n3)
                 (lambda (f3)
                   (lambda (x5)
                     (((n3 (lambda (g) (lambda (h) (h (g f3)))))
                       (lambda (ignored) x5))
                      (lambda (id) id))))))
         (sub (lambda (n41 n42)
                ((n42 pred) n41)))
         (church0 (lambda (f4) (lambda (x1) x1)))
         (church1 (lambda (f5) (lambda (x2) (f5 x2))))
         (church2 (lambda (f6) (lambda (x3) (f6 (f6 x3)))))
         (church3 (lambda (f7) (lambda (x4) (f7 (f7 (f7 x4))))))
         (church0? (lambda (n5)
                     ((n5 (lambda (x) #f)) #t)))
         (church=? (lambda (n61 n62)
                     (if (church0? n61)
                       (church0? n62)
                       (if (church0? n62)
                         #f
                         (church=? (sub n61 church1) (sub n62 church1)))))))
  ;; multiplication distributes over addition
  (church=? (mult church2 (plus church1 church3))
            (plus (mult church2 church1) (mult church2 church3))))
