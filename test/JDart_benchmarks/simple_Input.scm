(define (foo i i64)
  (display "\n-------- In foo! Parameter = ") (display i) (newline)
  (if (<= i64 0)
      (error "i64 <= 0"))
  (cond ((> i 64)
         (display "i > 64") (newline)
         (cond ((<= (* 5 i) 325)
                (display "5 * i <= 325") (newline)
                (if (not (= i 65))
                    (begin (display "i != 65") (newline))
                    (begin (display "i == 65") (newline)))
                (+ i 3))
               ((not (= i 66))
                (display "5 * i > 325 && i != 66") (newline)
                (+ i 5))
               (else
                (display "5 * i > 325 && i == 66") (newline)
                (error "foo failed"))))
        ((= i 7)
         (display "i & 7 == 7") (newline))))

(define (bar d)
  (display "\n-------- In bar! Parameter = ") (display d) (newline)
  (if (>= d 3.141)
      (begin (display "d >= 3.141") (newline)))
  (define as (asin d))
  (display "asin returned") (display as) (newline))

(define (zoo-sub j f)
  (if (> (+ f j) 256)
      (begin (display "i > 73 && f + j > 265") (newline)
             j)
      (begin (display "i > 73 && f + j <= 265") (newline)
             (error "false")
             0)))

(define (zoo i j f)
  (display "\n-------- In zoo! Parameters = ") (display i) (display " ") (display j) (display " ") (display f) (newline)
  (if (> i 73)
      (zoo-sub j f)
      (cond ((= i 12) (display "i == 12") (newline))
            ((= i 42) (display "i == 42") (newline))
            (else (display "i <= 73") (newline))))
  j)

(define (baz x y)
  (if (< x 5)
      (begin (display "x < 5") (newline)))
  (if (> y 40)
      (begin (display "y > 40") (newline)))
  (if (>= (+ x y) 43)
      (error "x + y >= 43")))

;(foo -1024 64)
;(bar 1.732)
;(zoo 1 2 1.414)
;(baz 37 42)