(define (fill-vector! vec len)
  (define (loop n)
    (if (< n len)
        (begin (vector-set! vec n (random 1))
               (loop (+ n 1)))))
  (loop 0))

(define (main)
  (define c 0)
  (define flag1 0)
  (define flag2 0)
  (define digit (make-vector 11))
  (display "\nEnter an integer > ")
  (set! c (random 1))
  (fill-vector! digit c)
  (newline)

  (define (loop1 i)
    (define break #f)
    (if (< i c)
        (begin (if (= (vector-ref digit i) 45)
                   (begin (set! flag1 i) (set! break #t))
                   (set! flag1 c))
               (if (not break) (loop1 (+ i 1))))))
  (loop1 1)
  (if (= (vector-ref digit 0) 45)
      (set! flag2 1))
  (define (loop2 i)
    (if (>= i flag2)
        (begin (if (and (= flag2 1) (= i 1))
                   (display "-"))
               (display (vector-ref digit i))
               (loop2 (- i 1)))))
  (loop2 (- flag1 1))
  (newline)
  (display "That's all, have a nice day!"))

(main)