
(define g (create-graph eq? #t #f))
(g 'insert-node 'z '())
(g 'insert-node 'y '())
(g 'insert-node 'x '())
(g 'insert-node 'w '())
(g 'insert-node 'v '())
(g 'insert-node 'u '())

(g 'insert-edge 'u 'x '())
(g 'insert-edge 'u 'v '())
(g 'insert-edge 'v 'y '())
(g 'insert-edge 'x 'v '())
(g 'insert-edge 'y 'x '())
(g 'insert-edge 'w 'y '())
(g 'insert-edge 'w 'z '())
(g 'insert-edge 'z 'z '())


(g 'foreach-node (lambda (l i)
                   (display l)
                   (display " << ")
                   (display i)
                   (display " >> ")
                   (newline)))
(test-dfs g)
(g 'foreach-node (lambda (l i)
                   (display l)
                   (display " << ")
                   (display i)
                   (display " >> ")
                   (newline)))
