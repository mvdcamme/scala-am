(letrec ((wants-to-enter-0 #f)
         (wants-to-enter-1 #f)
         (turn 0)
         (counter 0)
         (p0 (lambda ()
               (set! wants-to-enter-0 #t)
               (letrec ((wait (lambda ()
                                (if wants-to-enter-1
                                    (if (not (= turn 0))
                                        (letrec ((wait2 (lambda ()
                                                          (if (not (= turn 0))
                                                              (wait2)
                                                              #t))))
                                          (set! wants-to-enter-0 #f)
                                          (wait2)
                                          (set! wants-to-enter-0 #t)
                                          (wait))
                                        (wait))
                                    #t))))
                 (wait)
                 (set! turn 1) ; Error
                 ;; Critical section
                 (set! counter (+ counter 1))
                 (set! wants-to-enter-0 #f))))
         (p1 (lambda ()
               (set! wants-to-enter-1 #t)
               (letrec ((wait (lambda ()
                                (if wants-to-enter-0
                                    (if (not (= turn 1))
                                        (letrec ((wait2 (lambda ()
                                                          (if (not (= turn 1))
                                                              (wait2)
                                                              #t))))
                                          (set! wants-to-enter-1 #f)
                                          (wait2)
                                          (set! wants-to-enter-1 #t)
                                          (wait))
                                        (wait))
                                    #t))))
                 (wait)
                 (set! turn 0) ; Error
                 ;; Critical section
                 (set! counter (+ counter 1))
                 (set! wants-to-enter-1 #f))))
         (t0 (spawn (p0)))
         (t1 (spawn (p1))))
  (join t0)
  (join t1)
  counter)
